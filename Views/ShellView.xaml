<Window x:Class="DesktopAssignment.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopAssignment.Views"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Style="{StaticResource MaterialDesignWindow}"
        ResizeMode="CanMinimize"
        mc:Ignorable="d"
        Title="ShellView" Height="600" Width="1300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border BorderBrush="MediumPurple" BorderThickness="0,0,0,1">
                <TextBlock Text="http://api.ipstack.com/" IsEnabled="False" 
           Style="{StaticResource MaterialDesignBody1TextBlock}"/>
            </Border>
            <Border BorderBrush="MediumPurple" BorderThickness="0,0,0,1">
                <TextBlock Text="{Binding IpAddressOrUrl}" IsEnabled="False" 
           Style="{StaticResource MaterialDesignBody1TextBlock}"/>
            </Border>
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <TextBox Width="400" Margin="10" Style="{StaticResource MaterialDesignOutlinedTextBox}" Text="{Binding ApiKey, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Enter API Key Here"/>
            <Button  cal:Message.Attach="[Click] = [AddGeolocationAsync]" Style="{StaticResource MaterialDesignRaisedButton}" Width="200" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Plus" Margin="0,0,10,0"/>
                        <TextBlock Text="Add Geolocation"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button cal:Message.Attach="[Click] = [ReadGeolocationAsync]" Style="{StaticResource MaterialDesignRaisedButton}" Width="200" Margin="10">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Database" Margin="0,0,10,0"/>
                        <TextBlock Text="Read Existing"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Margin="30,10,10,10" cal:Message.Attach="[Click] = [RemoveAllAsync]" Style="{StaticResource MaterialDesignRaisedButton}" Background="DarkRed" Width="200">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Delete" Margin="0,0,10,0"/>
                        <TextBlock Text="Delete Existing"/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>
        <DataGrid Grid.Row="2" ItemsSource="{Binding Geolocations}" AutoGenerateColumns="False" Margin="10" 
               materialDesign:DataGridAssist.CellPadding="8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsReadOnly="True" CanUserAddRows="False">
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                </Style>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--Id is just added to show that correst rows are being removed-->
                <DataGridTextColumn Width="100" Header="ID" Binding="{Binding Id}" />
                <DataGridTextColumn Width="120" Header="IP" Binding="{Binding Ip}" />
                <DataGridTextColumn Width="80" Header="Type" Binding="{Binding Type}" />
                <DataGridTextColumn Width="120" Header="Continent" Binding="{Binding ContinentName}" />
                <DataGridTextColumn Width="120" Header="Country" Binding="{Binding CountryName}" />
                <DataGridTextColumn Width="100" Header="Region" Binding="{Binding RegionName}" />
                <DataGridTextColumn Width="120" Header="City" Binding="{Binding City}" />
                <DataGridTextColumn Width="80" Header="Zip" Binding="{Binding Zip}" />
                <DataGridTextColumn Width="150" Header="Latitude" Binding="{Binding Latitude}" />
                <DataGridTextColumn Width="150" Header="Longitude" Binding="{Binding Longitude}" />
                <DataGridTemplateColumn Header="Actions">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="50" Content="X" cal:Message.Attach="[Click]=[DeleteItemAsync($dataContext)]" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>